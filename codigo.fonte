

O código está localizado no arquivo `main.c` e utiliza a funcionalidade de interrupção do botão para iniciar a sequência de temporizador e controle dos LEDs.

```c
#include "pico/stdlib.h"
#include "hardware/timers.h"

// Definindo os pinos
#define LED_AZUL 15
#define LED_VERMELHO 16
#define LED_VERDE 17
#define BOTAO 14

// Variável para controlar se o botão foi pressionado
volatile bool botao_pressionado = false;

// Função de interrupção do botão
void button_callback(uint gpio, uint32_t events) {
    botao_pressionado = true;
}

// Função para desligar todos os LEDs
void desligar_leds() {
    gpio_put(LED_AZUL, 0);
    gpio_put(LED_VERMELHO, 0);
    gpio_put(LED_VERDE, 0);
}

// Função para ligar todos os LEDs
void ligar_todos_leds() {
    gpio_put(LED_AZUL, 1);
    gpio_put(LED_VERMELHO, 1);
    gpio_put(LED_VERDE, 1);
}

// Função que altera os estados dos LEDs (todos acesos, dois acesos, um aceso)
void altera_estado_leds(uint alarm_id) {
    static int estado = 0;

    if (estado == 0) {
        gpio_put(LED_AZUL, 1);
        gpio_put(LED_VERMELHO, 1);
        gpio_put(LED_VERDE, 1);
        estado = 1;
    } 
    else if (estado == 1) {
        gpio_put(LED_AZUL, 0); // Apaga o LED azul
        estado = 2;
    } 
    else if (estado == 2) {
        gpio_put(LED_VERMELHO, 0); // Apaga o LED vermelho
        estado = 3;
    } 
    else if (estado == 3) {
        desligar_leds(); // Desliga todos os LEDs
        estado = 0; // Reseta o estado
    }

    // Reconfigura o alarme para 1 segundo
    add_alarm_in_ms(1000, altera_estado_leds, 0, true);
}

int main() {
    // Inicializa os pinos dos LEDs
    gpio_init(LED_AZUL);
    gpio_set_dir(LED_AZUL, GPIO_OUT);
    gpio_init(LED_VERMELHO);
    gpio_set_dir(LED_VERMELHO, GPIO_OUT);
    gpio_init(LED_VERDE);
    gpio_set_dir(LED_VERDE, GPIO_OUT);

    // Inicializa o pino do botão com resistor de pull-down
    gpio_init(BOTAO);
    gpio_set_dir(BOTAO, GPIO_IN);
    gpio_pull_down(BOTAO);

    // Configura a interrupção para o botão
    gpio_set_irq_enabled_with_callback(BOTAO, GPIO_IRQ_EDGE_FALL, true, &button_callback);

    // Inicializa a comunicação serial (para depuração, caso necessário)
    stdio_init_all();

    // Loop principal
    while (1) {
        if (botao_pressionado) {
            botao_pressionado = false;
            ligar_todos_leds();  // Liga todos os LEDs
            altera_estado_leds(0); // Começa a sequência dos LEDs
        }
        tight_loop_contents(); // Aguarda interrupção
    }

    return 0;
}
